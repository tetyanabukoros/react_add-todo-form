{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","props","user","email","name","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","id","username","getUserById","userId","usersFromServer","find","App","useState","selectedUserId","setSelectedUserId","setTitle","newTodos","setNewTodos","errorTitle","setErrorTitle","errorSelect","setErrorSelect","allTodosIds","el","newId","Math","max","newUser","newTodo","onSubmit","event","preventDefault","length","action","method","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a1a6011.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo:React.FC<Props> = (props) => {\n  const { user: { email, name } } = props;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = (props) => {\n  const { todo: { title, completed, user } } = props;\n\n  return (\n    <article\n      data-id=\"1\"\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo/TodoInfo';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { todos } = props;\n\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n\n      {/* <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\">\n        <h2 className=\"TodoInfo__title\">\n          delectus aut autem\n        </h2>\n\n        <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n          Leanne Graham\n        </a>\n      </article> */}\n\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [newTodos, setNewTodos] = useState(todos);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorSelect, setErrorSelect] = useState(false);\n\n  const allTodosIds = [...todos].map(el => el.id);\n  const newId = Math.max(...allTodosIds) + 1;\n  const newUser = getUserById(selectedUserId);\n\n  const createNewTodo = () => {\n    return {\n      id: newId,\n      title,\n      completed: false,\n      userId: selectedUserId,\n      user: newUser,\n    };\n  };\n\n  const newTodo = createNewTodo();\n\n  const addNewTodo = () => {\n    return setNewTodos([\n      ...newTodos,\n      newTodo,\n    ]);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title.length === 0) {\n      setErrorTitle(true);\n    }\n\n    if (selectedUserId === 0) {\n      setErrorSelect(true);\n    }\n\n    if (title.length > 0\n      && selectedUserId !== 0) {\n      addNewTodo();\n      setSelectedUserId(0);\n      setTitle('');\n      setErrorTitle(false);\n      setErrorSelect(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n        action=\"/api/users\"\n        method=\"POST\"\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n          />\n          {(errorTitle && title.length === 0)\n            && (<span className=\"error\">Please enter a title</span>)}\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={selectedUserId}\n            onChange={(event) => setSelectedUserId(Number(event.target.value))}\n          >\n\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n\n          </select>\n          {(errorSelect && selectedUserId === 0)\n            && (\n              <span className=\"error\">Please choose a user</span>\n            ) }\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}